{"version":3,"sources":["components/ContactForm/ContactForm.module.css","App.module.css","components/Filter/Filter.module.css","components/ContactItem/ContactItem.module.css","components/ContactList/ContactList.module.css","components/ContactForm/ContactForm.js","components/ContactItem/ContactItem.js","components/ContactList/ContactList.js","components/Filter/Filter.js","hooks/useLocalStorage.js","App.js","index.js"],"names":["module","exports","ContactForm","onSubmit","useState","name","setName","number","setNumber","handleChange","e","target","value","reset","event","preventDefault","className","s","form","formLabel","type","pattern","title","required","onChange","formInput","button","ContactItem","id","onDeleteContact","item","deleteButton","onClick","ContactList","contacts","list","map","Filter","filter","filterBox","filterTitle","filterInput","useLocalStorage","key","defaultConatcts","localStorage","setItem","JSON","stringify","parse","getItem","state","setState","useEffect","prevContacts","App","setContacts","setFilter","filteredContacts","optimizedFilter","toLowerCase","contact","includes","getMatchingContacts","container","section","data","newContact","uuidv4","alert","prevState","currentTarget","contactId","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c193072d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__3aCNB\",\"formLabel\":\"ContactForm_formLabel__1OGFm\",\"formInput\":\"ContactForm_formInput__393a6\",\"button\":\"ContactForm_button__aBPZV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__1mDzr\",\"section\":\"App_section__2zYAj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filterBox\":\"Filter_filterBox__1TEzE\",\"filterTitle\":\"Filter_filterTitle__2cPFv\",\"filterInput\":\"Filter_filterInput__10Gd4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"ContactItem_item__2Ppqs\",\"deleteButton\":\"ContactItem_deleteButton__2GuZV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__376uy\"};","import { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport s from './ContactForm.module.css';\r\n\r\nfunction ContactForm({ onSubmit }) {\r\n  const [name, setName] = useState('');\r\n  const [number, setNumber] = useState('');\r\n\r\n  const handleChange = e => {\r\n    const { name, value } = e.target;\r\n    switch (name) {\r\n      case 'name':\r\n        setName(value);\r\n        break;\r\n      case 'number':\r\n        setNumber(value);\r\n        break;\r\n      default:\r\n        return;\r\n    }\r\n  };\r\n\r\n  const handleSubmit = event => {\r\n    event.preventDefault();\r\n\r\n    onSubmit({ name, number });\r\n    reset();\r\n  };\r\n\r\n  const reset = () => {\r\n    setName('');\r\n    setNumber('');\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit} className={s.form}>\r\n      <label className={s.formLabel}>\r\n        Name\r\n        <input\r\n          type=\"text\"\r\n          name=\"name\"\r\n          value={name}\r\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n          required\r\n          onChange={handleChange}\r\n          className={s.formInput}\r\n        />\r\n      </label>\r\n\r\n      <label className={s.formLabel}>\r\n        Number\r\n        <input\r\n          type=\"tel\"\r\n          name=\"number\"\r\n          value={number}\r\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n          title=\"Номер телефона должен состоять из 11-12 цифр и может содержать цифры, пробелы, тире, пузатые скобки и может начинаться с +\"\r\n          required\r\n          onChange={handleChange}\r\n          className={s.formInput}\r\n        />\r\n      </label>\r\n\r\n      <button type=\"submit\" className={s.button}>\r\n        Add contact\r\n      </button>\r\n    </form>\r\n  );\r\n}\r\n\r\nContactForm.propTypes = {\r\n  onSubmit: PropTypes.func,\r\n};\r\n\r\nexport default ContactForm;\r\n","import s from './ContactItem.module.css';\r\n\r\nconst ContactItem = ({ id, name, number, onDeleteContact }) => (\r\n  <li className={s.item} key={id}>\r\n    {name}: &nbsp;{number}\r\n    <button className={s.deleteButton} onClick={() => onDeleteContact(id)}>\r\n      Delete\r\n    </button>\r\n  </li>\r\n);\r\n\r\nexport default ContactItem;\r\n","import PropTypes from 'prop-types';\r\nimport s from './ContactList.module.css';\r\nimport ContactItem from '../ContactItem/ContactItem';\r\n\r\nconst ContactList = ({ contacts, onDeleteContact }) => (\r\n  <ul className={s.list}>\r\n    {contacts.map(({ name, id, number }) => (\r\n      <ContactItem\r\n        key={id}\r\n        id={id}\r\n        name={name}\r\n        number={number}\r\n        onDeleteContact={onDeleteContact}\r\n      />\r\n    ))}\r\n  </ul>\r\n);\r\n\r\nContactList.propTypes = {\r\n  contacts: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      name: PropTypes.string.isRequired,\r\n      id: PropTypes.string.isRequired,\r\n      number: PropTypes.string.isRequired,\r\n    }),\r\n  ),\r\n  onDeleteContact: PropTypes.func,\r\n};\r\n\r\nexport default ContactList;\r\n","import PropTypes from 'prop-types';\r\nimport s from './Filter.module.css';\r\n\r\nconst Filter = ({ filter, onChange }) => {\r\n  return (\r\n    <div className={s.filterBox}>\r\n      <p className={s.filterTitle}>Find contacts by name</p>\r\n      <input\r\n        className={s.filterInput}\r\n        type=\"text\"\r\n        value={filter}\r\n        onChange={onChange}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nFilter.propTypes = {\r\n  filter: PropTypes.string,\r\n  onChange: PropTypes.func,\r\n};\r\n\r\nexport default Filter;\r\n","import { useState, useEffect } from 'react';\r\n\r\nfunction useLocalStorage(key, defaultConatcts) {\r\n  const [state, setState] = useState(() => {\r\n    localStorage.setItem(key, JSON.stringify(defaultConatcts));\r\n    return JSON.parse(localStorage.getItem(key)) ?? defaultConatcts;\r\n  });\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem(key, JSON.stringify(state));\r\n  });\r\n\r\n  return [state, setState];\r\n}\r\n\r\nexport default useLocalStorage;\r\n","import React, { useState } from 'react';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport s from './App.module.css';\r\nimport ContactForm from './components/ContactForm/ContactForm';\r\nimport ContactList from './components/ContactList/ContactList';\r\nimport Filter from './components/Filter/Filter';\r\nimport useLocalStorage from './hooks/useLocalStorage';\r\n\r\nconst prevContacts = [\r\n  { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\r\n  { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\r\n  { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\r\n  { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\r\n];\r\n\r\nfunction App() {\r\n  const [contacts, setContacts] = useLocalStorage('contacts', prevContacts);\r\n  const [filter, setFilter] = useState('');\r\n\r\n  const handleAddContact = data => {\r\n    const newContact = { ...data, id: uuidv4() };\r\n\r\n    if (\r\n      contacts\r\n        .map(contact => contact.name.toLowerCase())\r\n        .includes(data.name.toLowerCase())\r\n    ) {\r\n      alert(`Contact \"${data.name}\" already exists`);\r\n    } else {\r\n      setContacts(prevState => [newContact, ...prevState]);\r\n    }\r\n  };\r\n\r\n  const handleFilter = event => {\r\n    const { value } = event.currentTarget;\r\n    setFilter(value);\r\n  };\r\n\r\n  const getMatchingContacts = () => {\r\n    const optimizedFilter = filter.toLowerCase();\r\n\r\n    return contacts.filter(contact =>\r\n      contact.name.toLowerCase().includes(optimizedFilter),\r\n    );\r\n  };\r\n\r\n  const deleteContact = contactId => {\r\n    setContacts(prevState =>\r\n      prevState.filter(contact => contact.id !== contactId),\r\n    );\r\n  };\r\n\r\n  const filteredContacts = getMatchingContacts();\r\n\r\n  return (\r\n    <div className={s.container}>\r\n      <section title=\"Phonebook\" className={s.section}>\r\n        <h1>Phonebook</h1>\r\n        <ContactForm onSubmit={handleAddContact} />\r\n      </section>\r\n\r\n      <section title=\"Contacts\" className={s.section}>\r\n        <h2>Contacts</h2>\r\n        <Filter value={filter} onChange={handleFilter} />\r\n        <ContactList\r\n          contacts={filteredContacts}\r\n          onDeleteContact={deleteContact}\r\n        />\r\n      </section>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'modern-normalize/modern-normalize.css';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n"],"sourceRoot":""}